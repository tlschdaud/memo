1.DecimalFormat - 숫자 -> 특정 형식의 문자열

2.SimpleDateFormat

y - yyyy년도
M - MM월
d - dd일

H - HH시(0~23), h(0~11) - a(AM/PM) E -요일
m - mm분(0~59)
s - ss초(0~59)

3.ChiceFormat

.format -> 형식화
.parse -> 형식화 문자열 -> 원래 형태

날짜와 시간
Calendar와 Date

Date 1.0
Calendar 1.1
  - 추상클래스, 생성자 protected -> 외부에서 객체 생성 X
  - 달력 체계가 다른 국가, 내부에서 지역에 맞는 달력 객체 생성자
  - static getInstance() -> Calendar 객체 : 현재 시간
  - set 메서드 -> 날짜와 시간을 지정
  - get 메서드 -> 날짜와 시간을 조회
  - add 메서드 +(roll)

java.time 패키지


-java.time - 핵심클래스
 Temporal, TemporalAccessor, TemporalAdjuster
   Temporal - 기준 인터페이스
   TemporalAccessor - 날짜와 시간 조회와 관련 인터페이스
   TemporalAdjuster - 날짜와 시간을 변경과 관련 인터페이스


  LocalDate - 날짜
  LocalTime - 시간
  LocalDateTime = LocalDate + LocalTime : 날짜와 시간
  ZonedDateTime = LocalDateTime + 시간대(Asia/Seoul)
  - 썸머타임 시간 조정까지 반영

  OffsetDateTime = LocalDateTime + 시간대(+9)
  - UTC + 9 // 시간대 차이대로 계산

  Instant = EpochTime(Timestamp) - long 형태의 시간 표기법
		-1970, 1, 1 자정 -> 천분의 일초로 카운팅한 수치(UTC+0)

  TemporalAmount
    -period: 날짜의 간격
    -Duration: 시간의 간격

java.time.format - 형식화
  DateTimeFormatter
    - format

  각 핵심 클래스(java.time)
  -parse : 형식화된 문자열 -> java.time 핵심 클래스 변환

java.time.temporal - 필드와 단위
  TemporalField - 년, 월, 일과 같은 필드
	-ChronoField(구현체)

  TemporalUnit - 날짜 시간 관련 단위
	-ChronoUnit(구현체)

java.time.zone - 시간대
  ZonedId - Asia/Seoul
  ZoneOffset - 현재 시간 차이 +9



java.time 패키지
java 1.8
  static of(...) -> 객체 생성

  static now() -> 현재 날짜 시간 기준 객체 생성

  각 핵심 클래스변 변환, 추가
  
  - to핵심클래스명 메서드 -> 변환 메서드

- get()
- with()
- minus()
- isAfter()
- isBefore()
- isEqual()








































  