1.컬렉션 프레임워크란?
  - 컬렉션(Collection)
  - 데이터 군(많은 데이터)

프레임워크(Framework)
  - 표준화된 설계 : 자료구조

- 데이터군을 다루는 표준화된 설계

표준의 기준 - 자료구조

/*Collection
================================
List : 순차 자료 구조(=배열)
       순서가 있다.
-------------------------------------------
Set : 집합 자료 구조

A - 1, 2, 3, 6
B - 3, 4, 5, 6

A와 B의 합집합
1, 2, 3, 4, 5, 6,

- 중복이 없는 자료 구조
- 순서가 없는 자료 구조*/
-----------------------------------------------------
Map : Diction 자료 구조 - 키워드 - 내용
       - 키 - 값의 쌍으로 구성


===================================
2. 컬렉션 프레임워크의 핵심 인터페이스

3. List 인터페이스
  순차 자료구조
  순서가 있는(유지 되는) 자료
  중복을 허용하는 자료구조
  인뎃스 번호로 접근

  구현된 클래스
  ArrayList
  LinkedList
  Stack
  Vector
* ArrayList는 index가 있고, LinkedList는 각 원소마다 앞,뒤 원소의 위치값을 가지고 있다.
* 조회시에는 ArrayList가 우위에 있지만,
  삽입/삭제 시에는 LinkedList가 뛰어난 성능을 보여준다.

  추가 : add()
  조회 : get(인덱스 번호);
  제거 : remove(인덱스 번호)
  포함여부 : contains(요소)
  요소의 갯수 : size()


3. Set 인터페이스
    집합 자료구조
  ★ 중복이 없는 자료
    - 순서가 없는(유지되지 않는) 자료
    - 인덱스 번호 X

  구현된 클래스
  HashSet
  TreeSet

중복을 체크하는 기준
  - equals()
  - hashCode()
  
  추가 : add()
  조회 : ...
  제거 : remove()
  포함여부 : contains(요소)


3. Map 인터페이스
   키 - 값의 쌍으로 구성된 자료구조
   
    순서 유지 X 
   구현된 클래스
   HashMap
   TreeMap
   Properties

   Hashtable(과거)

  추가 : put(키, 값)
  조회 : ...
  제거 : remove(키)
  포함여부: containsKey, containsValue


   키 : 값(내용)을 찾기위한 키워드 :  유일한 값(중복 X) : 집합 자료 / set : 집합 자료구조
   값 : 중복 O



4. Arrays



5. Collections


