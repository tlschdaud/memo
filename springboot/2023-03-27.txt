테스트
MockMvc

TDD - 테스트 케이스 : 설계
- 구현 -> 리팩토링 -> 테스트

유닛테스트(JUNIT5) - 기능

행위테스트(MockMvc)

profile

-Dspring.profiles.active=prod
-> application-prod.properties

application-test.properties

h2-database
/h2-console

perform(요청 메서드('/url').param("이름", "값")...)
   .andExepct
   .andDo
   .andReturn() -> 응답 body 데이터를 반환

Spring Data Jpa

JPA -> java Persistence API
hibernate


예)

AUTO_INCREMENT

시퀀스 객체

LIMIT

ROWNUM

Persistence Context - 영속성 컨텍스

   Entity ... 

EntityManager
    persist(엔티티) -> 영속성에서 관리되는 엔티티(변화 감지)

   detach(엔티티) -> 영속성에서 관리되는 엔티티를 분리
                           (변화 감지X)

   remove(엔티티) -> 제거

   merge(엔티티) -> detach 되어 있는 엔티티 -> 영속성

   find() -> 영속성에 있는 엔티티 조회(없을땐 DB에서 조회 -> 영속성)

   flush() -> 변화에 대한 부분을 일괄로 DB 반영


ddl-auto
   -create
      - 스프링 시작되면 엔티티로 정의된 테이블 전체 삭제하고 다시 추가
   - update
      - 테이블을 삭제 X
      - 테이블의 변경 사항만 반영

   - 테이블을 변경 X  (실서버)
   - validate : 엔티티와 테이블간의 불일치 -> 예외발생
   - none : 아무것도 안하는것




